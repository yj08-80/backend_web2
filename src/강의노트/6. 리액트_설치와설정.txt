[ react / 리액트 ]
    1. 정의 : 페이스북 회사에서 개발한 자바스크립트 라이브러리(함수 집합)
        예) 좋아요 기능, 댓글쓰기 기능 하면 페이지 전환해야 되는 불편함
        즉) ***** 페이지 전환이 없는 기능 구현 ******
    2. 목적 
        1)자바스크립트에서 부족한 UI 조작과 효율성 보안
        2) 웹/앱 유연한 UI 제공
        3) 트렌디한 변화 빠르게 대응

    3. 특징
        1) 화면(HTML)을 컴포넌트(함수)기반, 재사용 가능
        2) 가상 DOM : 가상( 가짜 ) HTML 사용하여 성능 최적화
        3) ** 훅( Hooks ) 지원 ** : 함수형 프로그래밍 방식으로 다양한 기능 지원 

    4. 사용처
        1) 웹개발 : React
        2) 앱개발 : React Native
        3) 웹/앱 개발 : React Native web
        현재 트렌드 : spring + react.js + next.js

    5.
        - SPA( Single page Application )
            1. HTML 한 장으로 구성, CSR( Client side Rendering )방식
            2. 클라이언트사이드렌더링이란? 사용자 브라우저에서 화면 전환
            3. 장점 : 빠르다, 서버부담적다
            4. 단점 : 최초로딩느리다, 검색엔진(SEO) 불리하다
                예시) React(web2)
                + 서버사이드렌더링을 고집하기 위해 next.js 도입한다.
            


        - MPA( Multi page Application )
            1. HTML 여러장으로 구성, SSR( Server side Rendering )방식
            2. 서버사이드렌더링이란? 서버가 제공하여 사용자브라우저에서 화면 전환

    6. react 프로젝트(패키지) 구조
        -> node_modules: 현재 프로젝트 설치된 라이브러리( 주로 GIT 저장소 COMMIT 하지 않는다 )
            * 만약에 해당 폴더가 없을 경우에 터미널에서 'npm install' 하면 자동으로 생성된다
        -> public : 주로 정적파일
        -> src : 주로 코드파일
            -> App.css : 컴포넌트 css 파일
            -> App.jsx : 최상의 컴포넌트 파일
            -> *** main.jsx *** : 최상위 컴포넌트를 렌더링하는 파일
            -> main.css : 최상위 css 파일
            추후에 역할에 따라 패키지 구성할 예정
            -> components 폴더
            -> pages 폴더
            -> api 폴더
        -> *** index.html *** : react ( spa : 싱글페이지 = HTML 1개 )의 최상위 HTML 파일
        -> *** package.json *** : 현재 프로젝트의 설정과 라이브러리 의존성 들어있는 파일 
