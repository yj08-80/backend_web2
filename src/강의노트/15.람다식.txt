[ 람다 표현식 ]
    1. 정의 : 익명 함수를 간결하게 표현하는 방법
        - JAVA8 이상 문법 : () -> { }
        - JS 문법 : () => { }

    2. 목적 : 메소드 선언 없이 구현부만 간단하게 작성
    3. 사용처
        1) 스트림API
        2) JAVAGUI
    4. 주요 인터페이스
        Function< T , R >, T : 입력 받아서 R : 결과를 반환, apply(T) 메소드 사용
        Supplier< T >, 입력 없이 T : 결과를 반환, get() 메소드 사용
        Consumer< T >, T : 입력 받아서 결과가 없음, accept(T) 메소드 사용
        Predicate< T >, T : 입력 받아서 결과를 true/false 반환, test(T) 메소드 사용
    5. 활용
        1) 추상메소드 구현체
        2) 컬렉션 프레임워크

    [ 스트림API ]
        1. 정의 : 데이터의 연속된 흐름 처리하는 방식 지원
        2. 흐름 : [ 데이터들 ] -----> [ 중간연산 ] ------> [ 최종연산 ]
        3. 주요 연산
            1) 중간 연산
                map, filter, sorted, distinct, limit 등등

            2) 최종 연산
                forEach, collect, reduce 등등
