[ 리덕스 ]
    1. 정의 : 전역 상태 관리 라이브러리, 서로 다른 컴포넌트간의 효율적인 상태(값) 공유한다
    2. 목적 : 상태를 저장하는 store(저장소) 만들고 서로 다른 컴포넌트 간의 일관적인 상태 유지한다(전역변수)
    3. 활용처 : 로그인상태(비밀번호x), 테마, 자동로그인 등등 주요 정보가 아닌 부가적인 곳
        1) 전역 상태(값) 필요할 때
        2) 여러 개의 컴포넌트에서 동일한 변수를 공유할 때
        3) 컴포넌트간 props 전달이 복잡해질 때 등등

    4. 핵심 용어
        1) Store(저장소) : 상태들을 관리하는 중앙, 즉) 모든 상태(전역변수)들을 저장한다
            - 애플리케이션 1개당 1개
            - configureStore( { reducer : { name : 등록할슬라이스 } } )
        2) Slice : 상태(전역변수)와 리듀서(함수=상태변경)를 정의하는 곳
            - 액션 통해 상태변경을 하면 *리렌더링* 된다
            createSlice()
        3) Reducer(리듀서) : 상태를 변경하는 함수
        4) action(액션) : 상태를 변경하기 위한 store에 보내는 함수
        5) export default 값 : JS파일 내 하나의 기본적인 내보내기 값(함수/객체), *name 없다*
        6) exprot const 변수명 = 값 : JS파일 내 여러 개 내보내기 값(함수/객체), *name 있다*
            import { 가져올변수명 } from '파일경로'

        
    5. 실행순서
        일반 컴포넌트 -- action --> Reducer --> Store --> 컴포넌트
        1) 일반(login페이지)컴포넌트에서 action 먼저 실행된다
            dispatch( login() )
        2) action이 store에 전달된다. dispatch
        3) store에 등록된 Reducer를 찾아서 state 업데이트한다

    6. 상위 컴포넌트에서 <Provider store={ 내가만든스토어 } > 통해 하위 컴포넌트에게 공급한다  
        1) 액션 호출 : dispatch( 상태변경함수( 인자값 ) );
            * slice : 함수명 : ( state , action ) => { }
        2) 현재 상태 반환 : userSelector( (state) => state.스토어상태명 )


    ====== 리덕스는 * 전역 상태* 이며 영구 저장 안된다 =====
    방법1. 클라이언트 사이드 렌더링 : + 퍼시스턴스
    방법2. 서버 사이드 렌더링 : +서버
    방법3. next.js( react 단점 보완 = 서버사이드렌더링, 검색엔진SEO )
